Some minor code tweak to work around limits in the auto-vectorizer


diff --git a/src/caffe/layers/relu_layer.cpp b/src/caffe/layers/relu_layer.cpp
index 92a729c..6a966f8 100644
--- a/src/caffe/layers/relu_layer.cpp
+++ b/src/caffe/layers/relu_layer.cpp
@@ -13,8 +13,9 @@ void ReLULayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,
   const int count = bottom[0]->count();
   Dtype negative_slope = this->layer_param_.relu_param().negative_slope();
   for (int i = 0; i < count; ++i) {
-    top_data[i] = std::max(bottom_data[i], Dtype(0))
-        + negative_slope * std::min(bottom_data[i], Dtype(0));
+    Dtype tmp = bottom_data[i];
+    top_data[i] = std::max(tmp, Dtype(0))
+        + negative_slope * std::min(tmp, Dtype(0));
   }
 }
 
@@ -29,8 +30,9 @@ void ReLULayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,
     const int count = bottom[0]->count();
     Dtype negative_slope = this->layer_param_.relu_param().negative_slope();
     for (int i = 0; i < count; ++i) {
-      bottom_diff[i] = top_diff[i] * ((bottom_data[i] > 0)
-          + negative_slope * (bottom_data[i] <= 0));
+      Dtype tmp = bottom_data[i];
+      bottom_diff[i] = top_diff[i] * ((tmp > 0)
+          + negative_slope * (tmp <= 0));
     }
   }
 }
